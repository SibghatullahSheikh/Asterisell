propel:

  cdr:
  #
  # the table where Asterisk Server put call-detail-records for each call,
  # modified with rate-specific fields.
  # NOTE: maintain the order of all fields from 'calldate' until 'userfield'
  # because it is the asterisk server expected order.

    calldate:    { type: timestamp, required: true, index: true }
    # 
    # start of call (date/time)

    clid:        { type: varchar, size: 255, required: true }
    #
    # caller id as text / short description 

    src:         { type: varchar, size: 255, required: true }
    #
    # received caller identifier as unique number
    # see "apps/asterisell/config/app.yml" for a description
    # of the real meaning of this field.

    dst:         { type: varchar, size: 255, required: true }
    #
    # destination extension
    # see "apps/asterisell/config/app.yml" for a description
    # of the real meaning of this field.

    dcontext:    { type: varchar, size: 255, required: true }
    #
    # destination context

    channel:     { type: varchar, size: 255, required: false }
    #
    # channel used

    dstchannel:  { type: varchar, size: 255, required: true }
    # 
    # destination channel, if appropiate.
    # Filters on rates are applied to this channel.
 
    lastapp:     { type: varchar, size: 255, required: true }
    #
    # last application ,if appropiate

    lastdata:    { type: varchar, size: 255, required: true }
    #
    # last application data (arguments)
    # see "apps/asterisell/config/app.yml" for a description
    # of the real meaning of this field.

    duration:    { type: integer, size: 11, required: true }
    #
    # total time in system, in seconds from answer to hangup

    billsec:     { type: integer, size: 11, required: true }
    #
    # total time call is up, in seconds, from answer to hangup

    disposition: { type: varchar, size: 255, required: true }
    #
    # what happened to the call (ANSWERED, NO ANSWER, BUSY)

    amaflags:    { type: integer, size: 11, required: true }
    # 
    # what flags to use (default, omit, billing, documentation).
    # AMA flags stand for Automated Message Accounting flags,
    # wich are somewhat standard in the industry

    accountcode: { type: varchar, size: 255 }
    #
    # ar_asterisk_account that must pay the outbound call

    uniqueid: { type: varchar, size: 255, required: true, index: true, default: "" }

    userfield:   { type: varchar, size: 255, required: true }
    #
    # a user-defined field

    ### !!! ADD NEW FIELDS BELOW AND NOT ABOVE in order to avoid   !!! ###
    ### !!! conflicts with Asterisk field expected order           !!! ###

    destination_type: { type: integer, size: 1, index: true, required: true, default: 0 }
    #
    # Value "0" identifies a CDR to process, not already rated.
    #
    # This field is indexed in order to speedup the retrieving of 
    # CDRs to rate.
    #
    # See "apps/asterisell/lib/DestinationType.php" for a list of available 
    # "destination_type": for incoming/outgoing/internal/ignorable calls.
    # 

    ar_asterisk_account_id:
    #
    # a fast link/join to the corresponding asterisk accountcode,
    # determinated during rating process, using the accountcode field.

    income_ar_rate_id: { type: integer, size: 20, required: false, default: null }
    #
    # the rate used/applied for income calculation, 
    # NULL if the call is not already rated.

    income: { type: integer, size: 20, required: false, default: null }
    #
    # what the customer must pay for the call 
    #
    # NULL if the call is not already rated,
    # 0 if the call has no income associated.

    cost_ar_rate_id: { type: integer, size: 20, required: false, default: null }
    #
    # how the cost is rated, NULL if the call is not already rated.

    vendor_id: { type: integer, size: 20, required: false, default: null }
    #
    # NULL before the rating process,
    # the vendor party-id wich must be paid for call routing service

    cost: { type: integer, size: 20, required: false, default: null }
    #
    # the income of the vendor that has managed the call 
    
    ar_telephone_prefix_id:
    #
    # the prefix associated to the called telephone number.
    # This association: 
    #   * is made during rating process;
    #   * does not depend from the rate method but only from the ar_telephone_prefix table;
    #   * allows to filter efficiently calls according the operator type of the called number;
    #   * breaks normalization rules because this property can be derived 
    #     (with a big amount of work) from cdr fields; 
    #   * breaking normalization rules became out of synchro 
    #     if after CDR rating the ar_telephone_prefix table is changed;

    cached_internal_telephone_number: { type: varchar, size: 255, required: false }
    #
    # NULL for unrated/unprocessed calls.
    # The proper internal telephone number of the call, as displayed in the CALL REPORT
    # This field allow to cache a not so easy calculation, that depends also from
    # configuration parameters of "apps/asterisell/config/app.yml", in order to 
    # support filtering and ordering on this field.
    # See "apps/asterisell/config/app.yml" comments for a detailed description 
    # of the meaning of internal and external telephone numbers.

    cached_external_telephone_number: { type: varchar, size: 255, required: false }
    #
    # NULL for unrated/unprocessed calls.
    # The proper external telephone number of the call, as displayed in the CALL REPORT
    # This field allow to cache a not so easy calculation, that depends also from
    # configuration parameters of "apps/asterisell/config/app.yml", in order to 
    # support filtering and ordering on this field.
    # See "apps/asterisell/config/app.yml" comments for a detailed description 
    # of the meaning of internal and external telephone numbers.

    external_telephone_number_with_applied_portability: { type: varchar, size: 255, required: false }
    #
    # The external telephone number with applied number portability.
    # This is the telephone number on wich must work rates.

    cached_masked_external_telephone_number: { type: varchar, size: 255, required: false }
    #
    # as "cached_external_telephone_number" but with a mask on its last part
    # if it is specified in the application configuration file.

    source_id: { type: varchar, size: 1024, required: false, unique: false, index: true }
    #
    # if the CDR was generated from a record of another table, 
    # this field contains a reference to it.
    # This field is used only if the application/installation 
    # import CDR records from other table. Normally it is not used.

    source_cost: { type: integer, size: 20, required: false, default: null }
    #
    # if the CDR was imported, this is its cost as specified from the external generator

    is_exported: { type: boolean, required: true, default: 0, index: true }
    #
    # 1 if the CDR was already exported to a client reseller
    # 0 if the CDR must be exported

    source_data_type: { type: varchar, size: 255 }
    #
    # identifies the type of source_data
    
    source_data: longvarchar
    #
    # in case of imported CDR, the source data describing the CDR.
    # For example in case of CDR imported from a CSV file,
    # this is a CSV line.
    
    id:
    #
    # NOTE: not in first position in order to not conflict with Asterisk Server
    # expected field order
 
    _foreignKeys:

      cdr_to_income_rate_key:
        foreignTable: ar_rate
        references:
          - { local: income_ar_rate_id, foreign: id }

      # XXX is there a method to assign a different alias name 
      # to ar_rate? The scope is to have joins like:
      #
      # FROM ar_rate as rate1, ar_rate as rate2 
      # WHERE rate1.id = cdr.income_ar_rate_id 
      # AND   rate2.id = cdr.cost_ar_rate_id
      # 
      cdr_to_cost_rate_key:
        foreignTable: ar_rate
        references:
          - { local: cost_ar_rate_id, foreign: id }
          
    _indexes:
      account_and_calldate_index: [ar_asterisk_account_id, calldate]

  ar_number_portability:
  #
  # mantain info about known telephone numbers 
  # that are ported to a new number.

    id:

    telephone_number: { type: varchar, size: 255, required: true, index: true }
    #
    # the source telephone number

    ported_telephone_number: { type: varchar, size: 255, required: true }
    #
    # the destination telephone number

    from_date:    { type: timestamp, required: false, index: true }
 
  ar_asterisk_account:
    id: 

    name: varchar(255)

    account_code: { type: varchar, size: 255, required: true, unique: true, index: true }
    #
    # the internal account code configured on the Asterisk Server
    # and used as reference in the cdr table 

    ar_office_id:
    #
    # the office of the customer that
    # is accountable (pays) for the call of this asterisk_account

    is_active: { type: boolean, required: true, default: 1 }

    ar_rate_category_id:
    #
    # NULL if it inherits the `ar_rate_category_id` if his `ar_office_id`

  ar_office:
  #
  # every customer can have one or more offices/seat/centers
  # In each offices there can be one or more asterisk_accounts.

    id:

    name: varchar(255)

    description: varchar(255)

    ar_party_id:

    ar_rate_category_id:
    #
    # NULL if it inherits the `ar_rate_category_id` if his `ar_party_id`

  ar_party:
  #
  # a customer or a vendor

    id:

    customer_or_vendor: { type: char, size: 1, required: true, index: true, default: 'C' }
    #
    # 'C' for a CUSTOMER
    # 'V" for a VENDOR

    name: varchar(255)

    external_crm_code: varchar(255)

    vat: varchar(255)
    #
    # VAT registration number

    legal_address: varchar(255) 

    legal_city: varchar(255)

    legal_zipcode: varchar(255)

    legal_state_province: varchar(255)

    legal_country: varchar(255)

    email: varchar(255)

    phone: varchar(255)

    phone2: varchar(255)

    fax: varchar(255)

    ar_rate_category_id:

    ar_params_id:

    max_limit_30: { type: integer, size: 20, required: false, default: NULL }
    #
    # the max cost of calls for last 30 days.

    last_email_advise_for_max_limit_30: timestamp
    #
    # when the customer was advised 

    is_active: { type: boolean, index: true, required: true, default: 1 }
    #
    # TRUE if it is an active customer/vendor.

    is_reseller: { type: boolean, index: true, required: true, default: 0 }
    #
    # TRUE if the customer is a reseller of VoIP calls.
    # Calls made from the account-code of this reseller, 
    # are reselled to other costumers, not known to this Asterisell installation.

    reseller_code: varchar(255)
    #
    # a short code of the customer used for specifying export 
    # directory and file names.

  ar_params:
  #
  # Params/resellers associated to customer/account

    id:

    name: varchar(255)
    #
    # identifies the params 

    is_default: boolean
    #
    # if TRUE use these parameters are applied also to login form
    # and when there are no other available params

    service_name: varchar(255)
    #
    # the name of the VoIP service offered from the Company

    service_provider_website: varchar(255)
    #
    # the web site address where the user can retrieve info about its telephone traffics. 
    # In other word, it is where Asterisell is installed.

    service_provider_email: varchar(255)
    #
    # the mail associated to the VoIP service

    vat_tax_perc: { type: integer, size: 20, required: true, default: 0 }
    #
    # VAT tax to apply to invoice amount, using the decimal format 
    # used also for incomes/costs.

    logo_image: varchar(255)
    #
    # the logo to display

    slogan: varchar(1024)
    #
    # the slogan to display near the logo

    logo_image_in_invoices: varchar(255)
    #
    # the logo to use in invoices

    footer: varchar(255)
    #
    # the text to display in the footer
 
    user_message: varchar(255)
    #
    # an optional informative message to show after login of the account

    legal_name: varchar(255)

    external_crm_code: varchar(255)

    vat: varchar(255)
    #
    # VAT registration number

    legal_address: varchar(255) 

    legal_website: varchar(255)
    #
    # Note: this is the company web site, not where Asterisell is installed.

    legal_city: varchar(255)

    legal_zipcode: varchar(255)

    legal_state_province: varchar(255)

    legal_country: varchar(255)

    legal_email: varchar(255)

    legal_phone: varchar(255)

    phone2: varchar(255)

    legal_fax: varchar(255)

    invoice_notes: varchar(255)
 
    invoice_payment_terms: varchar(2048)

    sender_name_on_invoicing_emails: varchar(255)
    #
    # the name used in invoices / reports

    invoicing_email_address: varchar(255)
    #
    # the sender mail address used for invoicing

    accountant_email_address: varchar(255)
    #
    # who receives a copy of sent invoices
    # for book-keeping.

    smtp_host: varchar(250)
    #
    # the smtp host to use for sending emails
    
    smtp_port: { type: integer, size: 4 }

    smtp_username: varchar(255)

    smtp_password: varchar(255)

    smtp_encryption: varchar(255)

    smtp_reconnect_after_nr_of_messages: { type: integer, size: 4 }

    smtp_seconds_of_pause_after_reconnection: { type: integer, size: 2 }

    current_invoice_nr: { type: integer, size: 11, required: true, default: 1 }
    #
    # It is not used anymore!

    logo_html_color: varchar(12)
    #
    # The main color of the logo, that can be used for customizing invoices, reports and screens

    payment_days: { type: integer, size: 20, required: false, default: null }

    reconnection_fee: varchar(40)

    info_telephone_number: varchar(512)

    late_payment_fee: varchar(40)

    etf_bbs: varchar(512)

    etf_acc_no: varchar(512)

    account_department: varchar(512)

    direct_debit_payment_email: varchar(512)

    direct_debit_payment_telephone_number: varchar(512)

    login_urn: varchar(512)
    #
    # the login path/urn used for starting directly with the logo 

  ar_web_account:
  
    id:

    login: { type: varchar, size: 20, required: true, index: true, unique: true }

    password: varchar(40)

    ar_party_id:
    #
    # NULL if the account is admin
    #
    # NOT NULL if the account is associated to a ar_party,
    # in this case the web_account can inspect all the calls of account
    # related to ar_party_id

    ar_office_id:
    #
    # NULL if the account is not associated to a specific ar_office.
    # 
    # NOT NULL if the account is associated to a specific ar_office,
    # in this case the ar_web_account can inspect only its calls.
    # In this case ar_party_id must be the party_associated to this ar_office_id.
    
    activate_at: date

    deactivate_at: date

    ar_params_id:
    
  ar_invoice:
    id:

    ar_party_id:

    type: { type: char, size: 1, required: true, index: true, default: 'C' }
    #
    # 'C' for a an invoice to send to a customer (incomes)
    # 'V' for a summary of vendor costs (costs)

    is_revenue_sharing: {type: boolean, index: true, required: true, default: false }
    #
    # TRUE if the invoice contains revenue sharing
    # FALSE if it is a normal invoice
    # NOTE: there can be invoice creation jobs that does not respect this parameter,
    # in particular for invoices containing both incoming and outcoming calls

    nr: { type: varchar, size: 20, index: true, required: true, unique: true } 

    invoice_date: { type: date, index: true }
    #
    # the date of the invoice

    ar_cdr_from: date
    #
    # consider calls starting from this date (incluse this date)

    ar_cdr_to: date
    #
    # consider calls until this date (excluse this date)

    total_bundle_without_tax: { type: integer, size: 20, required: false, default: 0 }
    #
    # the sum of cost of bundles active at the start date of the invoice,
    # associated to the same rate category of the invoice customer

    total_calls_without_tax: { type: integer, size: 20, required: false, default: 0 }
    #
    # the sum of calls cost

    total_without_tax: { type: integer, size: 20, required: false, default: NULL }
    #
    # the sumo of total_bundle_without_tax and total_calls_without_tax

    vat_perc: { type: integer, size: 20, required: false, default: NULL }

    total_vat: { type: integer, size: 20, required: false, default: NULL }

    total: { type: integer, size: 20, required: false, default: NULL }

    html_details: longvarchar
    #
    # details about the invoiced calls in HTML format.

    pdf_invoice: blob
    #
    # pdf version of the invoice

    pdf_call_report: blob
    #
    # pdf version of a call report with information
    # about the called numbers and so on...

    email_subject: varchar(1024)

    email_message: longvarchar

    already_sent: boolean
    #
    # true if the invoice is already sent to customer or received from vendor

    displayed_online: boolean
    #
    # true if the invoice can be displayed online to costumers, in other words it is a definitive invoice

    info_or_ads_image1: varchar(1024)
    #
    # a path to a file containing an info/ads image to (maybe) add inside the invoice during creation

    info_or_ads_image2: varchar(1024)
    #
    # a path to a file containing an info/ads image to (maybe) add inside the invoice during creation

    ar_params_id:
    #
    # in case of Vendor invoice, the invoice contains the costs of all (and only of) party associated to
    # the specified params, that act as a filter on reseller.


  ar_invoice_creation:
  #
  # store all the request of invoice creations 
 
    id:

    ar_params_id:
    #
    # create invoices about customers associated to the given parameter/resellers

    type: { type: char, size: 1, required: true, index: true, default: 'C' }
    #
    # 'C' for a an invoice to send to a customer (incomes)
    # 'V' for a summary of vendor costs (costs)

    is_revenue_sharing: {type: boolean, index: true, required: true, default: false }
    #
    # TRUE if the invoice contains revenue sharing
    # FALSE if it is a normal invoice
    # NOTE: there can be invoice creation jobs that does not respect this parameter,
    # in particular for invoices containing both incoming and outcoming calls

    first_nr: varchar(20)
    #
    # the first invoice number to use,
    # the last used number is first_nr + number of customers with
    # an invoice

    invoice_date: { type: date, index: true }

    ar_cdr_from: date
    #
    # consider calls starting from this date (incluse this date)

    ar_cdr_to: date
    #
    # consider calls until this date (exclise this date)

    info_or_ads_image1: varchar(1024)
    #
    # a path to a file containing an info/ads image to (maybe) add inside the invoice during creation

    info_or_ads_image2: varchar(1024)
    #
    # a path to a file containing an info/ads image to (maybe) add inside the invoice during creation

  ar_payment:
    id:

    ar_party_id:

    date: { type: date, index: true }

    invoice_nr: { type: varchar, size: 20, index: true, required: false, unique: false }
    #
    # an optional link to the invoice that was (maybe partially) payed

    payment_method: varchar(1024)

    payment_references: varchar(1024)
    
    amount: { type: integer, size: 20, required: true, default: 0 }

    note: longvarchar


  ar_rate_category:
  #
  # every customer can be assigned to a certain rate_category
    id:

    name: varchar(255)

  ar_rate:
    id:

    destination_type: { type: integer, size: 1, required: true, index: true, default: 0 }
    #
    # Identifies the "destination_type" of accepted CDRs that can be processed
    # from this rate.

    is_exception: { type: boolean, required: true, default: false }
    #
    # true if the rate is an exception and it must be applied
    # with an higher priority respect normal rates.
    # This allows to introduce exception rules to the 
    # rating process.

    ar_rate_category_id:
    #
    # at wich category of customers the rate is applicable,
    # NULL if the rate is a vendor rate

    ar_party_id:
    #
    # the vendor that apply the rate (we are its customer)
    # NULL if the rate is a customer rate

    start_time: { type: timestamp, required: true, index: true }
    # 
    # when the rate become applicable 

    end_time: timestamp
    #
    # NULL if the rate is current, 
    # the timestamp at wich the rate is not valid/applicable to calls

    php_class_serialization: clob
    #
    # serialization of a PHP class that given a CDR calc the rate.
    # This permits to adopt different rating methods using the
    # flexibility of PHP code.
    #
    # IMPORTANT: access this field using
    # > getPhpClassSerialization()->getContents()
    # because a CLOB (LONGTEXT) is managed
    # in a different way respect LONGVARCHARS
    # from Symfony framework.
    # In case of this field a special method
    # > unserializePhpRateMethod
    # was added to ArRate class.

    user_input: clob
    #
    # description of the user input eventually
    # used to initialize the rate.
    # Few rate methods use this field to store
    # private informations.
    #
    # IMPORTANT: access this field using
    # > getUserInput()->getContents()
    # because a CLOB (LONGTEXT) is managed
    # in a different way respect LONGVARCHARS
    # from Symfony framework.

    note: longvarchar

  ar_rate_incremental_info:
  #
  # Stores incremental info that a rate method can use during rating.
  # Each incremental info is associated to a tuple <ar_party_id, ar_rate_id, period>
  # and the incremental info is valid only if CDR are processed in a consecutive way
  # and last_processed_cdr_... fields are used for checking this condition.
    id:

    ar_party_id:

    ar_rate_id:

    period: { type: varchar(1024), index: true }
    #
    # identifies the period where the incremental info can be applied.
    # The meaning of the field depends uniquely from the
    # used PhpRate method.

    last_processed_cdr_date: timestamp

    last_processed_cdr_id: { type: integer, size: 20 }

    bundle_rate: clob
    #
    # serialization of the data as PHP class

  ar_telephone_prefix:
  #
  # A telephone prefix identifing a certain area or telephone operator.

    id:
  
    prefix: { type: varchar(255), required: true, unique: true, index: unique }
    
    name: varchar(255)
    
    geographic_location: varchar(255)
    #
    # where (mainly) user of the prefix 
    # are geographically located
    
    operator_type: { type: varchar(255), index: true }
    #
    # something like "mobile" or "fixed" or "VoIP"
    # that describes the type of transmission technology
    # associated to the prefix.
    # NULL if there is more than one type of connection
    # associated to the prefix.

    never_mask_number: { type: boolean, required: true, default: false }
    #
    # TRUE if the number must not be masked

  ar_problem:
  #
  # problems found during periodic check of the database

    id:

    created_at:
    #
    # when the problem was found

    duplication_key: { type: varchar(255), required: true, unique: true, index: true }
    # 
    # a unique-key representing the problem type, used in order to avoid many problems
    # of the same type in the table

    description: longvarchar

    effect: longvarchar

    proposed_solution: longvarchar

    user_notes: longvarchar

    mantain: boolean
    #
    # true if the problem must be mantained in the table during a purge operations

    signaled_to_admin: { type: boolean, required: true, default: false }
    #
    # true if the problem was signaled to the administrator 
    # via mail or other method

  ar_job_queue:
  #
  # job to execute/executing/executed

    id:

    is_part_of: { type: integer, size: 11, required: true, index: true, unique: false }
    #
    # is-part-of relationship.
    # It is equal to "id" when this job is not part of another
    # job. It is equal to the parent job when the parent were
    # decomposed in different jobs.
    # The job queue processor enforces the execution first of all ar_job_queue_id with lover values.
    # So job execution order is predictable.

    state: { type: integer, size: 1, required: true, index: true, unique: false, default: 0 }
    #
    # 0 for TODO
    # 1 for RUNNING
    # 2 for DONE
    # 3 for ERROR 

    created_at: timestamp
    #
    # when the job was added to the queue

    start_at: timestamp

    end_at: timestamp

    description: { type: varchar, size: 12000, required: true }
    #
    # a user readable detailed description of the job

    php_data_job_serialization: clob
    #
    # serialization of a PHP DataJob class containing the description
    # of the job to do in a PHP comprehensible format.
    #

    # IMPORTANT: access this field using
    #
    # > getPhpDataJobSerialization()->getContents()
    #
    # because a CLOB (LONGTEXT) is managed
    # in a different way respect LONGVARCHARS
    # from Symfony framework.

  ar_custom_rate_form:
  #
  # a temporary table used for processing forms
  # about custom rate methods.
  
    id: { type: integer, size: 20, primaryKey: true, autoIncrement: false, index: true, foreignTable: ar_rate, foreignReference: id, onDelete: cascade, required: true }
    #
    # it plays both the role of primary key and the role of a reference
    # to the ar_rate owning the custom PhpRate.

  ar_lock:
  #
  # locks about process and jobs, in order to avoid concurrent execution of cron process,
  # and in order to schedule certains jobs at certain intervals.

    id:

    name: { type: char, size: 255, required: true, index: true, unique: true }

    time: timestamp

    info: varchar(255)

  ar_database_version:
    id:
      
    version: varchar(255)
    
    installation_date: timestamp

  ar_asterisk_account_range:
  #
  # requests of voip range creation, made from the users
  # NOTE: the _creation ending name causes internal problems with symfony...

    id:

    ar_office_id:

    system_prefix: varchar(255)

    system_suffix: varchar(255)

    system_start_range: { type: varchar(18), required: true }
    # use varchar because otherwise with integer there are errors during conversion, for big size

    system_end_range: { type: varchar(18), required: true }
    # use varchar because otherwise with integer there are errors during conversion, for big size

    system_leading_zero: { type: integer, size: 4, required: true}

    is_delete: { type: boolean, required: true, default: false }

    is_physical_delete: { type: boolean, required: true, default: false }

    user_prefix: varchar(255)

    user_suffix: varchar(255)

    user_start_range: { type: varchar(18), required: true }
    # use varchar because otherwise with integer there are errors during conversion, for big size

    generate_range_for_users: { type: boolean, required: true, default: true }

    user_leading_zero: { type: integer, size: 4, required: true}

    user_note: varchar(6048)

  ar_document:
  #
  # documents that can be downloaded from customers with the proper right

    id:

    ar_party_id:

    document_name: varchar(128)

    document_date: date

    document: blob

    file_name: varchar(128)

    mime_type: varchar(256)

    already_opened: { type: boolean, required: true, default: false }

